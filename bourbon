#!/system/bin/sh
# Bourbonâ„¢ by Pedro (pedrozzz0 @ GitHub)
# Credits: Ktweak, by Draco (tytydraco @ GitHub), Uperf, by Matt Yang (yc9559 @ CoolApk)
# If you wanna use the code as part of your project, please maintain the credits to it's respectives authors

#####################
# Variables
#####################
bbn_log="/data/media/0/ktsr/bourbon.log"
bbn_info="/data/media/0/ktsr/bourbon.info"
ver="1.0.3"

[[ -d "/data/adb/modules/KTSR/" ]] && {
write_info "[!] KTSR found, exiting..."
exit 1
}

notif_start() { su -lp 2000 -c "cmd notification post -S bigtext -t 'Bourbon is executing' tag 'Affining tasks correctly...'" >/dev/null 2>&1; }

notif_end() { su -lp 2000 -c "cmd notification post -S bigtext -t 'Bourbon is executing' tag 'Optimizing done!'" >/dev/null 2>&1; }

write_info() { echo "$1" >"$bbn_info"; }

save_info() {
	write_info "[*] Bourbon - the essential task optimizer 
Version: $ver
Last performed: $(date '+%Y-%m-%d %H:%M:%S')
"
}

# $1:task_name $2:cgroup_name $3:"cpuset"/"stune"
change_task_cgroup() {
	for temp_pid in $(echo "$ps_ret" | grep -i -E "$1" | awk '{print $1}'); do
		for temp_tid in $(ls "/proc/$temp_pid/task/"); do
			comm="$(cat "/proc/$temp_pid/task/$temp_tid/comm")"
			echo "$temp_tid" >"/dev/$3/$2/tasks"
		done
	done
}

# $1:process_name $2:cgroup_name $3:"cpuset"/"stune"
change_proc_cgroup() {
	for temp_pid in $(echo "$ps_ret" | grep -i -E "$1" | awk '{print $1}'); do
		comm="$(cat "/proc/$temp_pid/comm")"
		echo "$temp_pid" >"/dev/$3/$2/cgroup.procs"
	done
}

# $1:task_name $2:thread_name $3:cgroup_name $4:"cpuset"/"stune"
change_thread_cgroup() {
	for temp_pid in $(echo "$ps_ret" | grep -i -E "$1" | awk '{print $1}'); do
		for temp_tid in $(ls "/proc/$temp_pid/task/"); do
			comm="$(cat "/proc/$temp_pid/task/$temp_tid/comm")"
			[[ "$(echo "$comm" | grep -i -E "$2")" != "" ]] && echo "$temp_tid" >"/dev/$4/$3/tasks"
		done
	done
}

# $1:task_name $2:cgroup_name $3:"cpuset"/"stune"
change_main_thread_cgroup() {
	for temp_pid in $(echo "$ps_ret" | grep -i -E "$1" | awk '{print $1}'); do
		comm="$(cat "/proc/$temp_pid/comm")"
		echo "$temp_pid" >"/dev/$3/$2/tasks"
	done
}

# $1:task_name $2:hex_mask(0x00000003 is CPU0 and CPU1)
change_task_affinity() {
	for temp_pid in $(echo "$ps_ret" | grep -i -E "$1" | awk '{print $1}'); do
		for temp_tid in $(ls "/proc/$temp_pid/task/"); do
			comm="$(cat "/proc/$temp_pid/task/$temp_tid/comm")"
			taskset -p "$2" "$temp_tid" >>"$bbn_log"
		done
	done
}

# $1:task_name $2:thread_name $3:hex_mask(0x00000003 is CPU0 and CPU1)
change_thread_affinity() {
	for temp_pid in $(echo "$ps_ret" | grep -i -E "$1" | awk '{print $1}'); do
		for temp_tid in $(ls "/proc/$temp_pid/task/"); do
			comm="$(cat "/proc/$temp_pid/task/$temp_tid/comm")"
			[[ "$(echo "$comm" | grep -i -E "$2")" != "" ]] && taskset -p "$3" "$temp_tid" >>"$bbn_log"
		done
	done
}

# $1:task_name $2:nice(relative to 120)
change_task_nice() {
	for temp_pid in $(echo "$ps_ret" | grep -i -E "$1" | awk '{print $1}'); do
		for temp_tid in $(ls "/proc/$temp_pid/task/"); do
			renice -n +40 -p "$temp_tid"
			renice -n -19 -p "$temp_tid"
			renice -n "$2" -p "$temp_tid"
		done
	done
}

# $1:task_name $2:thread_name $3:nice(relative to 120)
change_thread_nice() {
	for temp_pid in $(echo "$ps_ret" | grep -i -E "$1" | awk '{print $1}'); do
		for temp_tid in $(ls "/proc/$temp_pid/task/"); do
			comm="$(cat "/proc/$temp_pid/task/$temp_tid/comm")"
			[[ "$(echo "$comm" | grep -i -E "$2")" != "" ]] && {
				renice -n +40 -p "$temp_tid"
				renice -n -19 -p "$temp_tid"
				renice -n "$3" -p "$temp_tid"
			}
		done
	done
}

# $1:task_name $2:priority(99-x, 1<=x<=99) (SCHED_RR)
change_task_rt() {
	for temp_pid in $(echo "$ps_ret" | grep -i -E "$1" | awk '{print $1}'); do
		for temp_tid in $(ls "/proc/$temp_pid/task/"); do
			comm="$(cat "/proc/$temp_pid/task/$temp_tid/comm")"
			chrt -p "$temp_tid" "$2" >>"$bbn_log"
		done
	done
}

# $1:task_name $2:priority(99-x, 1<=x<=99) (SCHED_FIFO)
change_task_rt_ff() {
	for temp_pid in $(echo "$ps_ret" | grep -i -E "$1" | awk '{print $1}'); do
		for temp_tid in $(ls "/proc/$temp_pid/task/"); do
			comm="$(cat "/proc/$temp_pid/task/$temp_tid/comm")"
			chrt -f -p "$temp_tid" "$2" >>"$bbn_log"
		done
	done
}

# $1:task_name $2:thread_name $3:priority(99-x, 1<=x<=99)
change_thread_rt() {
	for temp_pid in $(echo "$ps_ret" | grep -i -E "$1" | awk '{print $1}'); do
		for temp_tid in $(ls "/proc/$temp_pid/task/"); do
			comm="$(cat "/proc/$temp_pid/task/$temp_tid/comm")"
			[[ "$(echo "$comm" | grep -i -E "$2")" != "" ]] && chrt -p "$3" "$temp_tid" >>"$bbn_log"
		done
	done
}

unpin_thread() { change_thread_cgroup "$1" "$2" "" "cpuset"; }

# 0-3
pin_thread_on_pwr() {
	unpin_thread "$1" "$2"
	change_thread_affinity "$1" "$2" "0f"
}

# 0-6
pin_thread_on_mid() {
	unpin_thread "$1" "$2"
	change_thread_affinity "$1" "$2" "7f"
}

# 4-7
pin_thread_on_perf() {
	unpin_thread "$1" "$2"
	change_thread_affinity "$1" "$2" "f0"
}

# 0-7
pin_thread_on_all() {
	unpin_proc "$1"
	change_task_affinity "$1" "ff"
}

# $1:task_name $2:thread_name $3:hex_mask
pin_thread_on_custom() {
	unpin_thread "$1" "$2"
	change_thread_affinity "$1" "$2" "$3"
}

# $1:task_name
unpin_proc() { change_task_cgroup "$1" "" "cpuset"; }

# 0-3
pin_proc_on_pwr() {
	unpin_proc "$1"
	change_task_affinity "$1" "0f"
}

# 0-6
pin_proc_on_mid() {
	unpin_proc "$1"
	change_task_affinity "$1" "7f"
}

# 4-7
pin_proc_on_perf() {
	unpin_proc "$1"
	change_task_affinity "$1" "f0"
}

# 0-7
pin_proc_on_all() {
	unpin_proc "$1"
	change_task_affinity "$1" "ff"
}

# $1:task_name $2:hex_mask
pin_proc_on_custom() {
	unpin_proc "$1"
	change_task_affinity "$1" "$2"
}

rebuild_ps_cache() { ps_ret="$(ps -Ao pid,args)"; }

# Userspace bourbon optimization
bbn_opt() {
	# Input dispatcher/reader
	change_thread_nice "system_server" "Input" "-20"
	# Speed up searching service manager
	change_task_nice "servicemanag" "-20"
	# Not important
	pin_thread_on_pwr "system_server" "VoiceReporter|StatsCompanionS|backup|Sync|Observer|TaskSnapshot|backup-|CachedAppOptimi|PeriodicCleaner"
	pin_thread_on_pwr "ndroid.systemui" "mi_analytics_up"
	# Run KGSL/Mali workers with max priority as both are critical tasks
	change_task_nice "kgsl_worker" "-20"
	pin_proc_on_perf "kgsl_worker"
	change_task_nice "mali_jd_thread" "-20"
	change_task_rt "mali_jd_thread" "50"
	change_task_nice "mali_event_thread" "-20"
	# Pin HWC on perf cluster to reduce jitter
	pin_proc_on_perf "composer"
	# Let SF use all cores
	pin_proc_on_all "surfaceflinger"
	# Devfreq boost should run with max priority and into the perf cluster as it is a critical task (boosting DDR)
	# Don't run it with RT_MAX_PRIO - 1 though
	change_task_nice "devfreq_boost" "-20"
	pin_proc_on_perf "devfreq_boost"
	change_task_rt "devfreq_boost" "50"
	# Pin these kthreads to the perf cluster as they also play a major role in rendering frames to the display
	# Pin only the first threads as others are non-critical
	n=80
	while [[ "$n" -lt "301" ]]; do
		pin_proc_on_perf "crtc_event:$i"
		pin_proc_on_perf "crtc_commit:$i"
		n=$((n + 1))
		break
	done
	pin_proc_on_perf "pp_event"
	pin_proc_on_perf "mdss_fb"
	pin_proc_on_perf "mdss_disp_wake"
	pin_proc_on_perf "vsync_retire_work"
	pin_proc_on_perf "pq@"
	# Improve I/O performance by pinning the block daemon into the perf cluster
	pin_proc_on_perf "kblockd"
	# Pin TS workqueues to perf cluster to reduce latency
	pin_proc_on_perf "fts_wq"
	pin_proc_on_perf "nvt_ts_workqueu"
	change_task_rt "nvt_ts_workqueu" "50"
	change_task_rt "fts_wq" "50"
	# Pin Samsung HyperHAL to perf cluster
	pin_proc_on_perf "hyper@"
	# Queue UFS/EMMC clock gating with max priority
	change_task_nice "ufs_clk_gating" "-20"
	change_task_nice "mmc_clk_gate" "-20"
	# Queue CVP fence request handler with max priority
	change_task_nice "thread_fence" "-20"
	# Queue CPU boost worker with max priority for obvious reasons
	change_task_rt "cpu_boost_work" "2"
	change_task_nice "cpu_boost_work" "-20"
	# Queue touchscreen related workers with max priority
	change_task_nice "speedup_resume_wq" "-20"
	change_task_nice "load_tp_fw_wq" "-20"
	change_task_nice "tcm_freq_hop" "-20"
	change_task_nice "touch_delta_wq" "-20"
	change_task_nice "tp_async" "-20"
	change_task_nice "wakeup_clk_wq" "-20"
	# Set RT priority correctly for critical tasks
	change_task_rt "kgsl_worker_thread" "6"
	change_task_rt "crtc_commit" "16"
	change_task_rt "crtc_event" "16"
	change_task_rt "pp_event" "16"
	change_task_rt "rot_commitq_" "5"
	change_task_rt "rot_doneq_" "5"
	change_task_rt "rot_fenceq_" "5"
	change_task_rt "system_server" "2"
	change_task_rt "surfaceflinger" "2"
	change_task_rt "composer" "2"
	# Boost app boot process
	change_task_nice "zygote" "-20"
	# Queue VM writeback with max priority
	change_task_nice "writeback" "-20"
	# Affects IO latency/throughput
	change_task_nice "kblockd" "-20"
	# Those workqueues don't need any priority
	change_task_nice "ipawq" "0"
	change_task_nice "iparepwq" "0"
	change_task_nice "wlan_logging_th" "10"
}

notif_start
rebuild_ps_cache
bbn_opt
notif_end

# Save mode to be applied automatically after reboot
save_info
